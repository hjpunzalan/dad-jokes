{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","this","props","votes","react_default","a","createElement","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","console","log","handleClick","bind","assertThisInitialized","length","getJokes","id","change","_this2","setState","st","objectSpread","setItem","stringify","numJokesToGet","axios","get","headers","Accept","res","newJoke","data","joke","has","push","concat","toConsumableArray","_this3","alert","_context","t0","_this4","sort","b","src","alt","key","Joke_Joke","handleVote","defaultProps","App","JokeList_JokeList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92459718.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './_Joke.scss';\n\nexport default class Joke extends Component {\n\tgetColor() {\n\t\tif (this.props.votes >= 15) {\n\t\t\treturn '#4CAF50';\n\t\t} else if (this.props.votes >= 12) {\n\t\t\treturn '#8BC34A';\n\t\t} else if (this.props.votes >= 9) {\n\t\t\treturn '#CDDC39';\n\t\t} else if (this.props.votes >= 6) {\n\t\t\treturn '#FFEB3B';\n\t\t} else if (this.props.votes >= 3) {\n\t\t\treturn '#FFC107';\n\t\t} else if (this.props.votes >= 0) {\n\t\t\treturn '#FF9800';\n\t\t} else {\n\t\t\treturn '#f44336';\n\t\t}\n\t}\n\tgetEmoji() {\n\t\tif (this.props.votes >= 15) {\n\t\t\treturn 'em em-rolling_on_the_floor_laughing';\n\t\t} else if (this.props.votes >= 12) {\n\t\t\treturn 'em em-laughing';\n\t\t} else if (this.props.votes >= 9) {\n\t\t\treturn 'em em-smiley';\n\t\t} else if (this.props.votes >= 6) {\n\t\t\treturn 'em em-slightly_smiling_face';\n\t\t} else if (this.props.votes >= 3) {\n\t\t\treturn 'em em-neutral_face';\n\t\t} else if (this.props.votes >= 0) {\n\t\t\treturn 'em em-confused';\n\t\t} else {\n\t\t\treturn 'em em-angry';\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Joke\">\n\t\t\t\t<div className=\"Joke-buttons\">\n\t\t\t\t\t<i className=\"fas fa-arrow-up\" onClick={this.props.upvote} />\n\t\t\t\t\t<span className=\"Joke-votes\" style={{ borderColor: this.getColor() }}>\n\t\t\t\t\t\t{this.props.votes}\n\t\t\t\t\t</span>\n\t\t\t\t\t<i className=\"fas fa-arrow-down\" onClick={this.props.downvote} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Joke-text\">{this.props.text}</div>\n\t\t\t\t<div className=\"Joke-smiley\">\n\t\t\t\t\t<i className={this.getEmoji()} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './_JokeList.scss';\nimport Joke from './Joke';\n\nexport default class JokeList extends Component {\n\tstatic defaultProps = {\n\t\tnumJokesToGet: 10\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tjokes: JSON.parse(window.localStorage.getItem('jokes') || '[]'),\n\t\t\tloading: false\n\t\t};\n\t\tthis.seenJokes = new Set(this.state.jokes.map(j => j.text));\n\t\tconsole.log(this.seenJokes);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.state.jokes.length === 0) this.getJokes();\n\t}\n\n\thandleVote(id, change) {\n\t\tthis.setState(\n\t\t\tst => ({\n\t\t\t\tjokes: st.jokes.map(j =>\n\t\t\t\t\tj.id === id ? { ...j, votes: j.votes + change } : j\n\t\t\t\t)\n\t\t\t}),\n\t\t\t() =>\n\t\t\t\twindow.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n\t\t);\n\t}\n\n\tasync getJokes() {\n\t\ttry {\n\t\t\tlet jokes = [];\n\t\t\twhile (jokes.length < this.props.numJokesToGet) {\n\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com/', {\n\t\t\t\t\theaders: { Accept: 'application/json' }\n\t\t\t\t});\n\t\t\t\tlet newJoke = res.data.joke;\n\t\t\t\tif (!this.seenJokes.has(newJoke)) {\n\t\t\t\t\tjokes.push({ id: res.data.id, text: res.data.joke, votes: 0 });\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('FOUND A DUPLICATE');\n\t\t\t\t\tconsole.log(newJoke);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState(\n\t\t\t\tst => ({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tjokes: [...st.jokes, ...jokes]\n\t\t\t\t}),\n\t\t\t\t() =>\n\t\t\t\t\twindow.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n\t\t\t);\n\t\t} catch (e) {\n\t\t\talert(e);\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\t}\n\n\thandleClick() {\n\t\tthis.setState({ loading: true }, this.getJokes);\n\t}\n\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"JokeList__spinner\">\n\t\t\t\t\t<i className=\"far fa-8x fa-laugh fa-spin\" />\n\t\t\t\t\t<h1 className=\"JokeList-title loading\">Loading...</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tlet jokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\n\t\treturn (\n\t\t\t<div className=\"JokeList\">\n\t\t\t\t<div className=\"JokeList__sidebar\">\n\t\t\t\t\t<h1 className=\"JokeList__sidebar-title\">\n\t\t\t\t\t\t<span>Dad</span> Jokes\n\t\t\t\t\t</h1>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\n\t\t\t\t\t\talt=\"zany face\"\n\t\t\t\t\t\tclassName=\"JokeList__sidebar-image\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"JokeList__sidebar-getmore\"\n\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tFetch Jokes\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"JokeList__jokes\">\n\t\t\t\t\t{jokes.map(j => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={j.id} className=\"JokeList__jokes-joke\">\n\t\t\t\t\t\t\t\t<Joke\n\t\t\t\t\t\t\t\t\tupvote={() => this.handleVote(j.id, 1)}\n\t\t\t\t\t\t\t\t\tdownvote={() => this.handleVote(j.id, -1)}\n\t\t\t\t\t\t\t\t\tvotes={j.votes}\n\t\t\t\t\t\t\t\t\ttext={j.text}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport './_App.scss';\nimport JokeList from './JokeList';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<JokeList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}